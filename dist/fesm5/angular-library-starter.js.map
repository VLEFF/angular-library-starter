{"version":3,"file":"angular-library-starter.js","sources":["../package/src/services/sum.service.ts","../package/src/components/sum.component.ts","../package/src/modules/arithmetic.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SumService {\n\n    /**\n     * Stores the last sum.\n     */\n    public sum: number;\n\n    /**\n     * Calculates the sum.\n     * @param addends Numbers to be added\n     */\n    public calculate(...addends: number[]): void {\n        this.sum = 0;\n        for (const addend of addends) {\n            this.sum += addend;\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SumService } from '../services/sum.service';\n\n@Component({\n    selector: 'cmp-sum',\n    templateUrl: './sum.component.html',\n    styleUrls: ['./sum.component.scss']\n})\nexport class SumComponent implements OnInit {\n\n    sum: number;\n\n    constructor(private sumService: SumService) { }\n\n    ngOnInit(): void {\n        this.sumService.calculate(45, 78, 90, 674);\n        this.sum = this.sumService.sum;\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { SumService } from '../services/sum.service';\nimport { SumComponent } from '../components/sum.component';\n\n@NgModule({\n    declarations: [\n        // Pipes.\n        // Directives.\n        // Components.\n        SumComponent\n    ],\n    exports: [\n        // Pipes.\n        // Directives.\n        // Components.\n        SumComponent\n    ]\n})\n// Consider registering providers using a forRoot() method\n// when the module exports components, directives or pipes that require sharing the same providers instances.\n// Consider registering providers also using a forChild() method\n// when they requires new providers instances or different providers in child modules.\nexport class ArithmeticModule {\n\n    /**\n     * Use in AppModule: new instance of SumService.\n     */\n    public static forRoot(): ModuleWithProviders<ArithmeticModule> {\n        return {\n            ngModule: ArithmeticModule,\n            providers: [SumService]\n        };\n    }\n\n    /**\n     * Use in features modules with lazy loading: new instance of SumService.\n     */\n    public static forChild(): ModuleWithProviders<ArithmeticModule> {\n        return {\n            ngModule: ArithmeticModule,\n            providers: [SumService]\n        };\n    }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;IAEA;KAmBC;;;;;;;;;;IAPU,8BAAS;;;;;IAAhB;QAAiB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACjC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAzB,IAAM,MAAM,gBAAA;YACb,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC;SACtB;KACJ;;gBAjBJ,UAAU;;IAmBX,iBAAC;CAnBD;;;;;;ACFA;IAYI,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;;;;IAE/C,+BAAQ;;;IAAR;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;KAClC;;gBAdJ,SAAS,SAAC;oBACP,QAAQ,EAAE,SAAS;oBACnB,+EAAmC;;iBAEtC;;;;gBANQ,UAAU;;IAkBnB,mBAAC;CAhBD;;;;;;ACHA;IAKA;KAwCC;;;;;;;;IAjBiB,wBAAO;;;;IAArB;QACI,OAAO;YACH,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE,CAAC,UAAU,CAAC;SAC1B,CAAC;KACL;;;;;;;;IAKa,yBAAQ;;;;IAAtB;QACI,OAAO;YACH,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE,CAAC,UAAU,CAAC;SAC1B,CAAC;KACL;;gBAtCJ,QAAQ,SAAC;oBACN,YAAY,EAAE;;;;wBAIV,YAAY;qBACf;oBACD,OAAO,EAAE;;;;wBAIL,YAAY;qBACf;iBACJ;;IA2BD,uBAAC;CAxCD;;;;;;;;;;;;;;;;;"}