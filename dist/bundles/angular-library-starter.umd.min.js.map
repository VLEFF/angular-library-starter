{"version":3,"sources":["../package/src/services/sum.service.ts","../package/src/components/sum.component.ts","../package/src/modules/arithmetic.module.ts"],"names":["SumService","prototype","calculate","addends","_i","arguments","length","_a","this","sum","addends_1","addend","Injectable","SumComponent","sumService","ngOnInit","Component","args","selector","template","ArithmeticModule","forRoot","ngModule","providers","forChild","NgModule","declarations","exports"],"mappings":";;;;OAAA,IAAAA,WAAA,WAEA,SAAAA,cAmBA,OAPWA,WAAAC,UAAAC,UAAP,eAAiB,IAAAC,QAAA,GAAAC,GAAA,EAAAA,GAAAC,UAAAC,OAAAF,KAAAD,QAAAC,IAAAC,UAAAD,IAEb,IAAqB,IAAAG,GADrBC,KAAKC,IAAM,EACUC,UAAAP,QAAAI,GAAAG,UAAAJ,OAAAC,KAAS,CAAzB,IAAMI,OAAMD,UAAAH,IACbC,KAAKC,KAAOE,sCAfvBC,KAAAA,aAmBDZ,WArBA,GCAAa,aAAA,WAYI,SAAAA,aAAoBC,YAAAN,KAAAM,WAAAA,WAOxB,OALID,aAAAZ,UAAAc,SAAA,WACIP,KAAKM,WAAWZ,UAAU,GAAI,GAAI,GAAI,KACtCM,KAAKC,IAAMD,KAAKM,WAAWL,oCAblCO,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,UACVC,SAAA,mKAJKnB,cAkBTa,aAnBA,GCAAO,iBAAA,WAKA,SAAAA,oBAwCA,OAjBkBA,iBAAAC,QAAd,WACI,MAAO,CACHC,SAAUF,iBACVG,UAAW,CAACvB,cAONoB,iBAAAI,SAAd,WACI,MAAO,CACHF,SAAUF,iBACVG,UAAW,CAACvB,iDApCvByB,KAAAA,SAAQR,KAAA,CAAC,CACNS,aAAc,CAIVb,cAEJc,QAAS,CAILd,kBA6BRO,iBA7CA","file":"angular-library-starter.umd.min.js.map","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SumService {\n\n    /**\n     * Stores the last sum.\n     */\n    public sum: number;\n\n    /**\n     * Calculates the sum.\n     * @param addends Numbers to be added\n     */\n    public calculate(...addends: number[]): void {\n        this.sum = 0;\n        for (const addend of addends) {\n            this.sum += addend;\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SumService } from '../services/sum.service';\n\n@Component({\n    selector: 'cmp-sum',\n    templateUrl: './sum.component.html',\n    styleUrls: ['./sum.component.scss']\n})\nexport class SumComponent implements OnInit {\n\n    sum: number;\n\n    constructor(private sumService: SumService) { }\n\n    ngOnInit(): void {\n        this.sumService.calculate(45, 78, 90, 674);\n        this.sum = this.sumService.sum;\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { SumService } from '../services/sum.service';\nimport { SumComponent } from '../components/sum.component';\n\n@NgModule({\n    declarations: [\n        // Pipes.\n        // Directives.\n        // Components.\n        SumComponent\n    ],\n    exports: [\n        // Pipes.\n        // Directives.\n        // Components.\n        SumComponent\n    ]\n})\n// Consider registering providers using a forRoot() method\n// when the module exports components, directives or pipes that require sharing the same providers instances.\n// Consider registering providers also using a forChild() method\n// when they requires new providers instances or different providers in child modules.\nexport class ArithmeticModule {\n\n    /**\n     * Use in AppModule: new instance of SumService.\n     */\n    public static forRoot(): ModuleWithProviders<ArithmeticModule> {\n        return {\n            ngModule: ArithmeticModule,\n            providers: [SumService]\n        };\n    }\n\n    /**\n     * Use in features modules with lazy loading: new instance of SumService.\n     */\n    public static forChild(): ModuleWithProviders<ArithmeticModule> {\n        return {\n            ngModule: ArithmeticModule,\n            providers: [SumService]\n        };\n    }\n\n}\n"]}